from filterpy.kalman import KalmanFilter
import numpy as np
from filterpy.common import Q_discrete_white_noise

ap = np.array([6, 28, 86, 180, 310, 476, 678, 916, 1190, 1500, 1846, 2228, 2646, 3100, 3590, 4116, 4678, 5276, 5910, 6580, 7286, 8028, 8806, 9620, 10470, 11356, 12278, 13236, 14230, 15260])
aq = np.array([22, 35, 54, 79, 110, 147, 190, 239, 294, 355, 422, 495, 574, 659, 750, 847, 950, 1059, 1174, 1295, 1422, 1555, 1694, 1839, 1990, 2147, 2310, 2479, 2654, 2835])
ar = np.array([8, 18, 46, 92, 156, 238, 338, 456, 592, 746, 918, 1108, 1316, 1542, 1786, 2048, 2328, 2626, 2942, 3276, 3628, 3998, 4386, 4792, 5216, 5658, 6118, 6596, 7092, 7606])

delt = 0.1
f = KalmanFilter (dim_x=9, dim_z=3)
f.x = np.array([0., 0., 1., 0., 0., 1., 0., 0., 1.])
f.F = np.array([[1.,    delt,   0.5*(delt**2),     0., 0., 0., 0., 0., 0.],
                [0.,    1.,     delt,               0., 0., 0., 0., 0., 0.],
                [0.,    0.,     1.,                 0., 0., 0., 0., 0., 0.],
                [0., 0., 0.,   1.,    delt,   0.5*(delt**2),   0., 0., 0.],
                [0., 0., 0.,    0.,    1.,     delt,            0., 0., 0.],
                [0., 0., 0.,    0.,    0.,     1.,              0., 0., 0.],
                [0., 0., 0., 0., 0., 0.,   1.,    delt,   0.5*(delt**2)],
                [0., 0., 0., 0., 0., 0.,    0.,    1.,     delt],
                [0., 0., 0., 0., 0., 0.,    0.,    0.,     1.]])
f.H = np.array([[1., 0., 0., 0., 0., 0., 0., 0., 0.],
                [0., 0., 0., 1., 0., 0., 0., 0., 0.],
                [0., 0., 0., 0., 0., 0., 1., 0., 0.]])
f.R = 5

f.P *= 1000.
f.Q = Q_discrete_white_noise(dim=3, dt=delt, block_size = 3, var=0.13, order_by_dim = True)

i=0
while (i<30):
    x = ap[i]
    y = aq[i]
    z = ar[i]
    f.predict()
    pos = [f.x[0],f.x[3],f.x[6]]
    print("({:.2f}".format(x), ", {:.2f})".format(f.x[0]), "\t\t({:.2f}".format(y), ", {:.2f})".format(f.x[3]), "\t\t({:.2f}".format(z), ", {:.2f})".format(f.x[6]))
    f.update([x,y,z])
    i += 1